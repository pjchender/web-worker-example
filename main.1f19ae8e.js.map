{"version":3,"sources":["cpu-intensive.js","main.js"],"names":["calculate","a","b","x","JSON","stringify","first","document","querySelector","second","result","enableWebWorker","myWorker","Worker","addEventListener","e","postMessage","value","data","textContent","formElem","target","matches","style","outlineColor","switchInput","switchText","checked","dataset","text"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["export const calculate = (a, b) => {\n  let x = 0;\n  while (x <= 5000000) {\n    JSON.stringify('{}');\n    x++;\n  }\n\n  return a * b;\n};\n","import { calculate } from './cpu-intensive';\n\nconst first = document.querySelector('#number1');\nconst second = document.querySelector('#number2');\nconst result = document.querySelector('.result');\n\nlet enableWebWorker = false;\nconst myWorker = new Worker(`./worker.js`);\n\nfirst.addEventListener('input', (e) => {\n  if (enableWebWorker) {\n    myWorker.postMessage([first.value, second.value]);\n  } else {\n    const data = calculate(first.value, second.value);\n    result.textContent = data;\n  }\n});\n\nsecond.addEventListener('input', () => {\n  if (enableWebWorker) {\n    myWorker.postMessage([first.value, second.value]);\n  } else {\n    const data = calculate(first.value, second.value);\n    result.textContent = data;\n  }\n});\n\nmyWorker.addEventListener('message', (e) => {\n  result.textContent = e.data;\n});\n\n/* highlight the outline when user input */\nconst formElem = document.querySelector('#form');\nformElem.addEventListener('keydown', (e) => {\n  if (e.target && e.target.matches('input')) {\n    e.target.style.outlineColor = '#de4463';\n  }\n});\n\nformElem.addEventListener('keyup', (e) => {\n  if (e.target && e.target.matches('input')) {\n    e.target.style.outlineColor = 'transparent';\n  }\n});\n\n/* switch button */\nconst switchInput = document.querySelector('.switch-input');\nconst switchText = document.querySelector('.switch-text');\nswitchInput.addEventListener('change', (e) => {\n  const { checked } = e.target;\n  if (checked) {\n    switchText.dataset.text = 'Web Worker On';\n    enableWebWorker = true;\n  } else {\n    switchText.dataset.text = 'Web Worker Off';\n    enableWebWorker = false;\n  }\n});\n"]}